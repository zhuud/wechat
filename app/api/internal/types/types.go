// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.1

package types

type CallbackReq struct {
	ToUserName string      `json:"ToUserName"`
	CreateTime int         `json:"CreateTime"`
	MsgType    string      `json:"MsgType"`
	Event      string      `json:"Event"`
	ChangeType string      `json:"ChangeType"`
	Data       interface{} `json:"Data"`
}

type ExternalContactWayDelRequest struct {
	ConfigID string `json:"config_id"`
}

type ExternalContactWayRequest struct {
	ConfigID               string   `json:"config_id"`
	Type                   int32    `json:"type"`                     // :1,
	Scene                  int32    `json:"scene"`                    // 1,
	Style                  int32    `json:"style"`                    // 1,
	Remark                 string   `json:"remark"`                   // "渠道客户",
	SkipVerify             bool     `json:"skip_verify"`              // true,
	State                  string   `json:"state"`                    // "teststate",
	User                   []string `json:"user"`                     // : ["zhangsan", "lisi", "wangwu"],
	Party                  []int32  `json:"party"`                    // : [2, 3],
	IsTemp                 bool     `json:"is_temp"`                  // true,
	ExpiresIn              int32    `json:"expires_in"`               // 86400,
	ChatExpiresIn          int32    `json:"chat_expires_in"`          // 86400,
	UnionID                string   `json:"unionid"`                  // "oxTWIuGaIt6gTKsQRLau2M0AAAA",
	ConclusionsText        string   `json:"conclusions_text"`         //{content:""}
	ConclusionsImage       string   `json:"conclusions_image"`        //{media_id: "", pic_url: ""}
	ConclusionsLink        string   `json:"conclusions_link"`         //{title:"", picurl:"", desc:"", url:""}
	ConclusionsMiniProgram string   `json:"conclusions_mini_program"` //{title:"", pic_media_id:"", appid:"", page:""}
}

type ExternalUserRequest struct {
	ExternalUseridList []string `json:"external_userid_list,optional"`
	UnionidList        []string `json:"unionid_list,optional"`
}

type ExternalWayQrInfoRequest struct {
	ConfigId string
}

type ExternalWayQrListRequest struct {
	StartTime int32
	EndTime   int32
	Cursor    string
	Limit     int32
}

type Request struct {
}

type Response struct {
	Code int         `json:"code"`
	Msg  string      `json:"msg"`
	Data interface{} `json:"data"`
}
