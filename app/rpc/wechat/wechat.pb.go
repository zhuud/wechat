// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.1
// source: wechat.proto

package wechat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误信息定义
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误码，0为成功，其他为失败
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息，成功时为空即可，失败时为错误信息概述
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ErrorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ErrorResp) Reset() {
	*x = ErrorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResp) ProtoMessage() {}

func (x *ErrorResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResp.ProtoReflect.Descriptor instead.
func (*ErrorResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{1}
}

func (x *ErrorResp) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ExternalUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalUseridList []string             `protobuf:"bytes,1,rep,name=external_userid_list,json=externalUseridList,proto3" json:"external_userid_list,omitempty"`
	UnionidList        []string             `protobuf:"bytes,2,rep,name=unionid_list,json=unionidList,proto3" json:"unionid_list,omitempty"`
	Opt                *ExternalUserInfoOpt `protobuf:"bytes,3,opt,name=opt,proto3" json:"opt,omitempty"`
}

func (x *ExternalUserInfoReq) Reset() {
	*x = ExternalUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserInfoReq) ProtoMessage() {}

func (x *ExternalUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserInfoReq.ProtoReflect.Descriptor instead.
func (*ExternalUserInfoReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{2}
}

func (x *ExternalUserInfoReq) GetExternalUseridList() []string {
	if x != nil {
		return x.ExternalUseridList
	}
	return nil
}

func (x *ExternalUserInfoReq) GetUnionidList() []string {
	if x != nil {
		return x.UnionidList
	}
	return nil
}

func (x *ExternalUserInfoReq) GetOpt() *ExternalUserInfoOpt {
	if x != nil {
		return x.Opt
	}
	return nil
}

type ExternalUserInfoOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeedFollow    bool `protobuf:"varint,1,opt,name=need_follow,json=needFollow,proto3" json:"need_follow,omitempty"`
	NeedAttribute bool `protobuf:"varint,2,opt,name=need_attribute,json=needAttribute,proto3" json:"need_attribute,omitempty"`
}

func (x *ExternalUserInfoOpt) Reset() {
	*x = ExternalUserInfoOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserInfoOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserInfoOpt) ProtoMessage() {}

func (x *ExternalUserInfoOpt) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserInfoOpt.ProtoReflect.Descriptor instead.
func (*ExternalUserInfoOpt) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{3}
}

func (x *ExternalUserInfoOpt) GetNeedFollow() bool {
	if x != nil {
		return x.NeedFollow
	}
	return false
}

func (x *ExternalUserInfoOpt) GetNeedAttribute() bool {
	if x != nil {
		return x.NeedAttribute
	}
	return false
}

type ExternalUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List map[string]*ExternalUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExternalUserInfoResp) Reset() {
	*x = ExternalUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserInfoResp) ProtoMessage() {}

func (x *ExternalUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserInfoResp.ProtoReflect.Descriptor instead.
func (*ExternalUserInfoResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{4}
}

func (x *ExternalUserInfoResp) GetList() map[string]*ExternalUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ExternalUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalUser *ExternalUser             `protobuf:"bytes,1,opt,name=external_user,json=externalUser,proto3" json:"external_user,omitempty"`
	FollowUser   []*ExternalUserFollowUser `protobuf:"bytes,2,rep,name=follow_user,json=followUser,proto3" json:"follow_user,omitempty"`
}

func (x *ExternalUserInfo) Reset() {
	*x = ExternalUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserInfo) ProtoMessage() {}

func (x *ExternalUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserInfo.ProtoReflect.Descriptor instead.
func (*ExternalUserInfo) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{5}
}

func (x *ExternalUserInfo) GetExternalUser() *ExternalUser {
	if x != nil {
		return x.ExternalUser
	}
	return nil
}

func (x *ExternalUserInfo) GetFollowUser() []*ExternalUserFollowUser {
	if x != nil {
		return x.FollowUser
	}
	return nil
}

type ExternalUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalUserid  string               `protobuf:"bytes,1,opt,name=external_userid,json=externalUserid,proto3" json:"external_userid,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Position        string               `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Avatar          string               `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	CorpName        string               `protobuf:"bytes,5,opt,name=corp_name,json=corpName,proto3" json:"corp_name,omitempty"`
	CorpFullName    string               `protobuf:"bytes,6,opt,name=corp_full_name,json=corpFullName,proto3" json:"corp_full_name,omitempty"`
	Type            int32                `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Gender          int32                `protobuf:"varint,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Unionid         string               `protobuf:"bytes,9,opt,name=unionid,proto3" json:"unionid,omitempty"`
	ExternalProfile *ExternalUserProfile `protobuf:"bytes,10,opt,name=external_profile,json=externalProfile,proto3" json:"external_profile,omitempty"`
}

func (x *ExternalUser) Reset() {
	*x = ExternalUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUser) ProtoMessage() {}

func (x *ExternalUser) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUser.ProtoReflect.Descriptor instead.
func (*ExternalUser) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{6}
}

func (x *ExternalUser) GetExternalUserid() string {
	if x != nil {
		return x.ExternalUserid
	}
	return ""
}

func (x *ExternalUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalUser) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *ExternalUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ExternalUser) GetCorpName() string {
	if x != nil {
		return x.CorpName
	}
	return ""
}

func (x *ExternalUser) GetCorpFullName() string {
	if x != nil {
		return x.CorpFullName
	}
	return ""
}

func (x *ExternalUser) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ExternalUser) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *ExternalUser) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *ExternalUser) GetExternalProfile() *ExternalUserProfile {
	if x != nil {
		return x.ExternalProfile
	}
	return nil
}

type ExternalUserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalAttr []*ExternalUserProfileItem `protobuf:"bytes,1,rep,name=external_attr,json=externalAttr,proto3" json:"external_attr,omitempty"`
}

func (x *ExternalUserProfile) Reset() {
	*x = ExternalUserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserProfile) ProtoMessage() {}

func (x *ExternalUserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserProfile.ProtoReflect.Descriptor instead.
func (*ExternalUserProfile) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{7}
}

func (x *ExternalUserProfile) GetExternalAttr() []*ExternalUserProfileItem {
	if x != nil {
		return x.ExternalAttr
	}
	return nil
}

type ExternalUserProfileItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32                        `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Name string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Text *ExternalUserProfileItemText `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ExternalUserProfileItem) Reset() {
	*x = ExternalUserProfileItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserProfileItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserProfileItem) ProtoMessage() {}

func (x *ExternalUserProfileItem) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserProfileItem.ProtoReflect.Descriptor instead.
func (*ExternalUserProfileItem) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{8}
}

func (x *ExternalUserProfileItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ExternalUserProfileItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalUserProfileItem) GetText() *ExternalUserProfileItemText {
	if x != nil {
		return x.Text
	}
	return nil
}

type ExternalUserProfileItemText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExternalUserProfileItemText) Reset() {
	*x = ExternalUserProfileItemText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserProfileItemText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserProfileItemText) ProtoMessage() {}

func (x *ExternalUserProfileItemText) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserProfileItemText.ProtoReflect.Descriptor instead.
func (*ExternalUserProfileItemText) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{9}
}

func (x *ExternalUserProfileItemText) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ExternalUserFollowUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid         string                               `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Remark         string                               `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	Description    string                               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Createtime     int32                                `protobuf:"varint,4,opt,name=createtime,proto3" json:"createtime,omitempty"`
	Tags           []*ExternalUserFollowUserTag         `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	RemarkCorpName string                               `protobuf:"bytes,6,opt,name=remark_corp_name,json=remarkCorpName,proto3" json:"remark_corp_name,omitempty"`
	RemarkMobiles  []string                             `protobuf:"bytes,7,rep,name=remark_mobiles,json=remarkMobiles,proto3" json:"remark_mobiles,omitempty"`
	OperUserid     string                               `protobuf:"bytes,8,opt,name=oper_userid,json=operUserid,proto3" json:"oper_userid,omitempty"`
	AddWay         int32                                `protobuf:"varint,9,opt,name=add_way,json=addWay,proto3" json:"add_way,omitempty"`
	WechatChannels *ExternalUserFollowUserWechatChannel `protobuf:"bytes,10,opt,name=wechat_channels,json=wechatChannels,proto3" json:"wechat_channels,omitempty"`
}

func (x *ExternalUserFollowUser) Reset() {
	*x = ExternalUserFollowUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserFollowUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserFollowUser) ProtoMessage() {}

func (x *ExternalUserFollowUser) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserFollowUser.ProtoReflect.Descriptor instead.
func (*ExternalUserFollowUser) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{10}
}

func (x *ExternalUserFollowUser) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *ExternalUserFollowUser) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ExternalUserFollowUser) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExternalUserFollowUser) GetCreatetime() int32 {
	if x != nil {
		return x.Createtime
	}
	return 0
}

func (x *ExternalUserFollowUser) GetTags() []*ExternalUserFollowUserTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ExternalUserFollowUser) GetRemarkCorpName() string {
	if x != nil {
		return x.RemarkCorpName
	}
	return ""
}

func (x *ExternalUserFollowUser) GetRemarkMobiles() []string {
	if x != nil {
		return x.RemarkMobiles
	}
	return nil
}

func (x *ExternalUserFollowUser) GetOperUserid() string {
	if x != nil {
		return x.OperUserid
	}
	return ""
}

func (x *ExternalUserFollowUser) GetAddWay() int32 {
	if x != nil {
		return x.AddWay
	}
	return 0
}

func (x *ExternalUserFollowUser) GetWechatChannels() *ExternalUserFollowUserWechatChannel {
	if x != nil {
		return x.WechatChannels
	}
	return nil
}

type ExternalUserFollowUserTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	TagName   string `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	TagId     string `protobuf:"bytes,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Type      int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ExternalUserFollowUserTag) Reset() {
	*x = ExternalUserFollowUserTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserFollowUserTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserFollowUserTag) ProtoMessage() {}

func (x *ExternalUserFollowUserTag) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserFollowUserTag.ProtoReflect.Descriptor instead.
func (*ExternalUserFollowUserTag) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{11}
}

func (x *ExternalUserFollowUserTag) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ExternalUserFollowUserTag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *ExternalUserFollowUserTag) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *ExternalUserFollowUserTag) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ExternalUserFollowUserWechatChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Source   int32  `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *ExternalUserFollowUserWechatChannel) Reset() {
	*x = ExternalUserFollowUserWechatChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserFollowUserWechatChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserFollowUserWechatChannel) ProtoMessage() {}

func (x *ExternalUserFollowUserWechatChannel) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserFollowUserWechatChannel.ProtoReflect.Descriptor instead.
func (*ExternalUserFollowUserWechatChannel) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{12}
}

func (x *ExternalUserFollowUserWechatChannel) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ExternalUserFollowUserWechatChannel) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type ExternalUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseridList []string `protobuf:"bytes,1,rep,name=userid_list,json=useridList,proto3" json:"userid_list,omitempty"`
}

func (x *ExternalUserIdReq) Reset() {
	*x = ExternalUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserIdReq) ProtoMessage() {}

func (x *ExternalUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserIdReq.ProtoReflect.Descriptor instead.
func (*ExternalUserIdReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{13}
}

func (x *ExternalUserIdReq) GetUseridList() []string {
	if x != nil {
		return x.UseridList
	}
	return nil
}

type ExternalUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ExternalUserid []string `protobuf:"bytes,2,rep,name=external_userid,json=externalUserid,proto3" json:"external_userid,omitempty"`
}

func (x *ExternalUserIdResp) Reset() {
	*x = ExternalUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalUserIdResp) ProtoMessage() {}

func (x *ExternalUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalUserIdResp.ProtoReflect.Descriptor instead.
func (*ExternalUserIdResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{14}
}

func (x *ExternalUserIdResp) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExternalUserIdResp) GetExternalUserid() []string {
	if x != nil {
		return x.ExternalUserid
	}
	return nil
}

type UpdateExternalUserRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid           string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	ExternalUserid   string   `protobuf:"bytes,2,opt,name=external_userid,json=externalUserid,proto3" json:"external_userid,omitempty"`
	Remark           string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Description      string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	RemarkCompany    string   `protobuf:"bytes,5,opt,name=remark_company,json=remarkCompany,proto3" json:"remark_company,omitempty"`
	RemarkMobiles    []string `protobuf:"bytes,6,rep,name=remark_mobiles,json=remarkMobiles,proto3" json:"remark_mobiles,omitempty"`
	RemarkPicMediaid string   `protobuf:"bytes,7,opt,name=remark_pic_mediaid,json=remarkPicMediaid,proto3" json:"remark_pic_mediaid,omitempty"`
}

func (x *UpdateExternalUserRemarkReq) Reset() {
	*x = UpdateExternalUserRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExternalUserRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExternalUserRemarkReq) ProtoMessage() {}

func (x *UpdateExternalUserRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExternalUserRemarkReq.ProtoReflect.Descriptor instead.
func (*UpdateExternalUserRemarkReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateExternalUserRemarkReq) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *UpdateExternalUserRemarkReq) GetExternalUserid() string {
	if x != nil {
		return x.ExternalUserid
	}
	return ""
}

func (x *UpdateExternalUserRemarkReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateExternalUserRemarkReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateExternalUserRemarkReq) GetRemarkCompany() string {
	if x != nil {
		return x.RemarkCompany
	}
	return ""
}

func (x *UpdateExternalUserRemarkReq) GetRemarkMobiles() []string {
	if x != nil {
		return x.RemarkMobiles
	}
	return nil
}

func (x *UpdateExternalUserRemarkReq) GetRemarkPicMediaid() string {
	if x != nil {
		return x.RemarkPicMediaid
	}
	return ""
}

type UseridList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseridList []string `protobuf:"bytes,1,rep,name=userid_list,json=useridList,proto3" json:"userid_list,omitempty"`
}

func (x *UseridList) Reset() {
	*x = UseridList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseridList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseridList) ProtoMessage() {}

func (x *UseridList) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseridList.ProtoReflect.Descriptor instead.
func (*UseridList) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{16}
}

func (x *UseridList) GetUseridList() []string {
	if x != nil {
		return x.UseridList
	}
	return nil
}

type ExternalGroupChatListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusFilter int32       `protobuf:"varint,1,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"`
	OwnerFilter  *UseridList `protobuf:"bytes,2,opt,name=owner_filter,json=ownerFilter,proto3" json:"owner_filter,omitempty"`
	Cursor       string      `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit        int32       `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ExternalGroupChatListReq) Reset() {
	*x = ExternalGroupChatListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalGroupChatListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalGroupChatListReq) ProtoMessage() {}

func (x *ExternalGroupChatListReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalGroupChatListReq.ProtoReflect.Descriptor instead.
func (*ExternalGroupChatListReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{17}
}

func (x *ExternalGroupChatListReq) GetStatusFilter() int32 {
	if x != nil {
		return x.StatusFilter
	}
	return 0
}

func (x *ExternalGroupChatListReq) GetOwnerFilter() *UseridList {
	if x != nil {
		return x.OwnerFilter
	}
	return nil
}

func (x *ExternalGroupChatListReq) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ExternalGroupChatListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ExternalGroupChatInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId   string `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	NeedName int32  `protobuf:"varint,2,opt,name=need_name,json=needName,proto3" json:"need_name,omitempty"`
}

func (x *ExternalGroupChatInfoReq) Reset() {
	*x = ExternalGroupChatInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalGroupChatInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalGroupChatInfoReq) ProtoMessage() {}

func (x *ExternalGroupChatInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalGroupChatInfoReq.ProtoReflect.Descriptor instead.
func (*ExternalGroupChatInfoReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{18}
}

func (x *ExternalGroupChatInfoReq) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ExternalGroupChatInfoReq) GetNeedName() int32 {
	if x != nil {
		return x.NeedName
	}
	return 0
}

type ExternalContactWayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId      string                        `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	QrCode        string                        `protobuf:"bytes,2,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"`
	Type          int32                         `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Scene         int32                         `protobuf:"varint,4,opt,name=scene,proto3" json:"scene,omitempty"`
	Style         int32                         `protobuf:"varint,5,opt,name=style,proto3" json:"style,omitempty"`
	Remark        string                        `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	SkipVerify    bool                          `protobuf:"varint,7,opt,name=skip_verify,json=skipVerify,proto3" json:"skip_verify,omitempty"`
	State         string                        `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	User          []string                      `protobuf:"bytes,9,rep,name=user,proto3" json:"user,omitempty"`
	Party         []int32                       `protobuf:"varint,10,rep,packed,name=party,proto3" json:"party,omitempty"`
	IsTemp        bool                          `protobuf:"varint,11,opt,name=is_temp,json=isTemp,proto3" json:"is_temp,omitempty"`
	ExpiresIn     int32                         `protobuf:"varint,12,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	ChatExpiresIn int32                         `protobuf:"varint,13,opt,name=chat_expires_in,json=chatExpiresIn,proto3" json:"chat_expires_in,omitempty"`
	Unionid       string                        `protobuf:"bytes,14,opt,name=unionid,proto3" json:"unionid,omitempty"`
	IsExclusive   bool                          `protobuf:"varint,15,opt,name=is_exclusive,json=isExclusive,proto3" json:"is_exclusive,omitempty"`
	Conclusions   *ExternalContactWayConclusion `protobuf:"bytes,16,opt,name=conclusions,proto3" json:"conclusions,omitempty"`
}

func (x *ExternalContactWayData) Reset() {
	*x = ExternalContactWayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayData) ProtoMessage() {}

func (x *ExternalContactWayData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayData.ProtoReflect.Descriptor instead.
func (*ExternalContactWayData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{19}
}

func (x *ExternalContactWayData) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ExternalContactWayData) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

func (x *ExternalContactWayData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ExternalContactWayData) GetScene() int32 {
	if x != nil {
		return x.Scene
	}
	return 0
}

func (x *ExternalContactWayData) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *ExternalContactWayData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ExternalContactWayData) GetSkipVerify() bool {
	if x != nil {
		return x.SkipVerify
	}
	return false
}

func (x *ExternalContactWayData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ExternalContactWayData) GetUser() []string {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ExternalContactWayData) GetParty() []int32 {
	if x != nil {
		return x.Party
	}
	return nil
}

func (x *ExternalContactWayData) GetIsTemp() bool {
	if x != nil {
		return x.IsTemp
	}
	return false
}

func (x *ExternalContactWayData) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *ExternalContactWayData) GetChatExpiresIn() int32 {
	if x != nil {
		return x.ChatExpiresIn
	}
	return 0
}

func (x *ExternalContactWayData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *ExternalContactWayData) GetIsExclusive() bool {
	if x != nil {
		return x.IsExclusive
	}
	return false
}

func (x *ExternalContactWayData) GetConclusions() *ExternalContactWayConclusion {
	if x != nil {
		return x.Conclusions
	}
	return nil
}

type ExternalContactWayConclusion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        *ExternalContactWayConclusionText        `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Image       *ExternalContactWayConclusionImage       `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Link        *ExternalContactWayConclusionLink        `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Miniprogram *ExternalContactWayConclusionMiniprogram `protobuf:"bytes,4,opt,name=miniprogram,proto3" json:"miniprogram,omitempty"`
}

func (x *ExternalContactWayConclusion) Reset() {
	*x = ExternalContactWayConclusion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayConclusion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayConclusion) ProtoMessage() {}

func (x *ExternalContactWayConclusion) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayConclusion.ProtoReflect.Descriptor instead.
func (*ExternalContactWayConclusion) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{20}
}

func (x *ExternalContactWayConclusion) GetText() *ExternalContactWayConclusionText {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *ExternalContactWayConclusion) GetImage() *ExternalContactWayConclusionImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ExternalContactWayConclusion) GetLink() *ExternalContactWayConclusionLink {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *ExternalContactWayConclusion) GetMiniprogram() *ExternalContactWayConclusionMiniprogram {
	if x != nil {
		return x.Miniprogram
	}
	return nil
}

type ExternalContactWayConclusionText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ExternalContactWayConclusionText) Reset() {
	*x = ExternalContactWayConclusionText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayConclusionText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayConclusionText) ProtoMessage() {}

func (x *ExternalContactWayConclusionText) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayConclusionText.ProtoReflect.Descriptor instead.
func (*ExternalContactWayConclusionText) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{21}
}

func (x *ExternalContactWayConclusionText) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ExternalContactWayConclusionImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
}

func (x *ExternalContactWayConclusionImage) Reset() {
	*x = ExternalContactWayConclusionImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayConclusionImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayConclusionImage) ProtoMessage() {}

func (x *ExternalContactWayConclusionImage) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayConclusionImage.ProtoReflect.Descriptor instead.
func (*ExternalContactWayConclusionImage) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{22}
}

func (x *ExternalContactWayConclusionImage) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type ExternalContactWayConclusionLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Picurl string `protobuf:"bytes,2,opt,name=picurl,proto3" json:"picurl,omitempty"` // 格式问题
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ExternalContactWayConclusionLink) Reset() {
	*x = ExternalContactWayConclusionLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayConclusionLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayConclusionLink) ProtoMessage() {}

func (x *ExternalContactWayConclusionLink) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayConclusionLink.ProtoReflect.Descriptor instead.
func (*ExternalContactWayConclusionLink) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{23}
}

func (x *ExternalContactWayConclusionLink) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExternalContactWayConclusionLink) GetPicurl() string {
	if x != nil {
		return x.Picurl
	}
	return ""
}

func (x *ExternalContactWayConclusionLink) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ExternalContactWayConclusionLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ExternalContactWayConclusionMiniprogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	PicMediaId string `protobuf:"bytes,2,opt,name=pic_media_id,json=picMediaId,proto3" json:"pic_media_id,omitempty"` // 格式问题
	Appid      string `protobuf:"bytes,3,opt,name=appid,proto3" json:"appid,omitempty"`
	Page       string `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ExternalContactWayConclusionMiniprogram) Reset() {
	*x = ExternalContactWayConclusionMiniprogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayConclusionMiniprogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayConclusionMiniprogram) ProtoMessage() {}

func (x *ExternalContactWayConclusionMiniprogram) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayConclusionMiniprogram.ProtoReflect.Descriptor instead.
func (*ExternalContactWayConclusionMiniprogram) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{24}
}

func (x *ExternalContactWayConclusionMiniprogram) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExternalContactWayConclusionMiniprogram) GetPicMediaId() string {
	if x != nil {
		return x.PicMediaId
	}
	return ""
}

func (x *ExternalContactWayConclusionMiniprogram) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *ExternalContactWayConclusionMiniprogram) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

type SaveExternalContactWayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ConfigId string `protobuf:"bytes,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	QrCode   string `protobuf:"bytes,3,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"`
}

func (x *SaveExternalContactWayResp) Reset() {
	*x = SaveExternalContactWayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveExternalContactWayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveExternalContactWayResp) ProtoMessage() {}

func (x *SaveExternalContactWayResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveExternalContactWayResp.ProtoReflect.Descriptor instead.
func (*SaveExternalContactWayResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{25}
}

func (x *SaveExternalContactWayResp) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SaveExternalContactWayResp) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *SaveExternalContactWayResp) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

type ExternalContactWayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId string `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
}

func (x *ExternalContactWayReq) Reset() {
	*x = ExternalContactWayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayReq) ProtoMessage() {}

func (x *ExternalContactWayReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayReq.ProtoReflect.Descriptor instead.
func (*ExternalContactWayReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{26}
}

func (x *ExternalContactWayReq) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

type ExternalContactWayInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error                  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ContactWay *ExternalContactWayData `protobuf:"bytes,2,opt,name=contact_way,json=contactWay,proto3" json:"contact_way,omitempty"`
}

func (x *ExternalContactWayInfoResp) Reset() {
	*x = ExternalContactWayInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayInfoResp) ProtoMessage() {}

func (x *ExternalContactWayInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayInfoResp.ProtoReflect.Descriptor instead.
func (*ExternalContactWayInfoResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{27}
}

func (x *ExternalContactWayInfoResp) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExternalContactWayInfoResp) GetContactWay() *ExternalContactWayData {
	if x != nil {
		return x.ContactWay
	}
	return nil
}

type ExternalContactWayListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int32  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int32  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Cursor    string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit     int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ExternalContactWayListReq) Reset() {
	*x = ExternalContactWayListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayListReq) ProtoMessage() {}

func (x *ExternalContactWayListReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayListReq.ProtoReflect.Descriptor instead.
func (*ExternalContactWayListReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{28}
}

func (x *ExternalContactWayListReq) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ExternalContactWayListReq) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ExternalContactWayListReq) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ExternalContactWayListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ExternalContactWayListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *Error                   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ContactWay []*ExternalContactWayReq `protobuf:"bytes,2,rep,name=contact_way,json=contactWay,proto3" json:"contact_way,omitempty"`
	NextCursor string                   `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *ExternalContactWayListResp) Reset() {
	*x = ExternalContactWayListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalContactWayListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalContactWayListResp) ProtoMessage() {}

func (x *ExternalContactWayListResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalContactWayListResp.ProtoReflect.Descriptor instead.
func (*ExternalContactWayListResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{29}
}

func (x *ExternalContactWayListResp) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExternalContactWayListResp) GetContactWay() []*ExternalContactWayReq {
	if x != nil {
		return x.ContactWay
	}
	return nil
}

func (x *ExternalContactWayListResp) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

var File_wechat_proto protoreflect.FileDescriptor

var file_wechat_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x30, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x70, 0x74, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x22, 0x5d,
	0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x4f, 0x70, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x6e, 0x65, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xa5, 0x01,
	0x0a, 0x14, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x1a, 0x51, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0d, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x22, 0xd0, 0x02, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x72,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x72, 0x70, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x5b, 0x0a, 0x13, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x44, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x22, 0x7a, 0x0a, 0x17, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x33, 0x0a, 0x1b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa2, 0x03, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x72,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x64, 0x64, 0x57, 0x61, 0x79, 0x12, 0x54, 0x0a, 0x0f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x19, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x59, 0x0a, 0x23, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x11, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x62, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x69, 0x64, 0x22, 0x94, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x50, 0x69, 0x63, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0c,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x50, 0x0a, 0x18, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xec, 0x03, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x71,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x1c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x51, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61,
	0x79, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x22, 0x3c, 0x0a, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x3e, 0x0a, 0x21, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x64, 0x22, 0x76, 0x0a, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x69, 0x63, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63,
	0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x8b, 0x01, 0x0a, 0x27, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79,
	0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x69, 0x63, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x1a, 0x53, 0x61, 0x76, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x34, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x22, 0x83, 0x01, 0x0a, 0x19,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57,
	0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x57, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x32, 0x8f, 0x02, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x50,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x52, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x2e,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x23, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x32, 0xbc, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x68, 0x61, 0x74, 0x12, 0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x32, 0xe6, 0x03, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x12, 0x5e,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x12, 0x1e, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x22, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x12, 0x1e, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x22, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x12, 0x1d, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x57, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x57, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x57, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x57, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x57, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wechat_proto_rawDescOnce sync.Once
	file_wechat_proto_rawDescData = file_wechat_proto_rawDesc
)

func file_wechat_proto_rawDescGZIP() []byte {
	file_wechat_proto_rawDescOnce.Do(func() {
		file_wechat_proto_rawDescData = protoimpl.X.CompressGZIP(file_wechat_proto_rawDescData)
	})
	return file_wechat_proto_rawDescData
}

var file_wechat_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_wechat_proto_goTypes = []interface{}{
	(*Error)(nil),                                   // 0: wechat.Error
	(*ErrorResp)(nil),                               // 1: wechat.ErrorResp
	(*ExternalUserInfoReq)(nil),                     // 2: wechat.ExternalUserInfoReq
	(*ExternalUserInfoOpt)(nil),                     // 3: wechat.ExternalUserInfoOpt
	(*ExternalUserInfoResp)(nil),                    // 4: wechat.ExternalUserInfoResp
	(*ExternalUserInfo)(nil),                        // 5: wechat.ExternalUserInfo
	(*ExternalUser)(nil),                            // 6: wechat.ExternalUser
	(*ExternalUserProfile)(nil),                     // 7: wechat.ExternalUserProfile
	(*ExternalUserProfileItem)(nil),                 // 8: wechat.ExternalUserProfileItem
	(*ExternalUserProfileItemText)(nil),             // 9: wechat.ExternalUserProfileItemText
	(*ExternalUserFollowUser)(nil),                  // 10: wechat.ExternalUserFollowUser
	(*ExternalUserFollowUserTag)(nil),               // 11: wechat.ExternalUserFollowUserTag
	(*ExternalUserFollowUserWechatChannel)(nil),     // 12: wechat.ExternalUserFollowUserWechatChannel
	(*ExternalUserIdReq)(nil),                       // 13: wechat.ExternalUserIdReq
	(*ExternalUserIdResp)(nil),                      // 14: wechat.ExternalUserIdResp
	(*UpdateExternalUserRemarkReq)(nil),             // 15: wechat.UpdateExternalUserRemarkReq
	(*UseridList)(nil),                              // 16: wechat.UseridList
	(*ExternalGroupChatListReq)(nil),                // 17: wechat.ExternalGroupChatListReq
	(*ExternalGroupChatInfoReq)(nil),                // 18: wechat.ExternalGroupChatInfoReq
	(*ExternalContactWayData)(nil),                  // 19: wechat.ExternalContactWayData
	(*ExternalContactWayConclusion)(nil),            // 20: wechat.ExternalContactWayConclusion
	(*ExternalContactWayConclusionText)(nil),        // 21: wechat.ExternalContactWayConclusionText
	(*ExternalContactWayConclusionImage)(nil),       // 22: wechat.ExternalContactWayConclusionImage
	(*ExternalContactWayConclusionLink)(nil),        // 23: wechat.ExternalContactWayConclusionLink
	(*ExternalContactWayConclusionMiniprogram)(nil), // 24: wechat.ExternalContactWayConclusionMiniprogram
	(*SaveExternalContactWayResp)(nil),              // 25: wechat.SaveExternalContactWayResp
	(*ExternalContactWayReq)(nil),                   // 26: wechat.ExternalContactWayReq
	(*ExternalContactWayInfoResp)(nil),              // 27: wechat.ExternalContactWayInfoResp
	(*ExternalContactWayListReq)(nil),               // 28: wechat.ExternalContactWayListReq
	(*ExternalContactWayListResp)(nil),              // 29: wechat.ExternalContactWayListResp
	nil,                                             // 30: wechat.ExternalUserInfoResp.ListEntry
}
var file_wechat_proto_depIdxs = []int32{
	0,  // 0: wechat.ErrorResp.error:type_name -> wechat.Error
	3,  // 1: wechat.ExternalUserInfoReq.opt:type_name -> wechat.ExternalUserInfoOpt
	30, // 2: wechat.ExternalUserInfoResp.list:type_name -> wechat.ExternalUserInfoResp.ListEntry
	6,  // 3: wechat.ExternalUserInfo.external_user:type_name -> wechat.ExternalUser
	10, // 4: wechat.ExternalUserInfo.follow_user:type_name -> wechat.ExternalUserFollowUser
	7,  // 5: wechat.ExternalUser.external_profile:type_name -> wechat.ExternalUserProfile
	8,  // 6: wechat.ExternalUserProfile.external_attr:type_name -> wechat.ExternalUserProfileItem
	9,  // 7: wechat.ExternalUserProfileItem.text:type_name -> wechat.ExternalUserProfileItemText
	11, // 8: wechat.ExternalUserFollowUser.tags:type_name -> wechat.ExternalUserFollowUserTag
	12, // 9: wechat.ExternalUserFollowUser.wechat_channels:type_name -> wechat.ExternalUserFollowUserWechatChannel
	0,  // 10: wechat.ExternalUserIdResp.error:type_name -> wechat.Error
	16, // 11: wechat.ExternalGroupChatListReq.owner_filter:type_name -> wechat.UseridList
	20, // 12: wechat.ExternalContactWayData.conclusions:type_name -> wechat.ExternalContactWayConclusion
	21, // 13: wechat.ExternalContactWayConclusion.text:type_name -> wechat.ExternalContactWayConclusionText
	22, // 14: wechat.ExternalContactWayConclusion.image:type_name -> wechat.ExternalContactWayConclusionImage
	23, // 15: wechat.ExternalContactWayConclusion.link:type_name -> wechat.ExternalContactWayConclusionLink
	24, // 16: wechat.ExternalContactWayConclusion.miniprogram:type_name -> wechat.ExternalContactWayConclusionMiniprogram
	0,  // 17: wechat.SaveExternalContactWayResp.error:type_name -> wechat.Error
	0,  // 18: wechat.ExternalContactWayInfoResp.error:type_name -> wechat.Error
	19, // 19: wechat.ExternalContactWayInfoResp.contact_way:type_name -> wechat.ExternalContactWayData
	0,  // 20: wechat.ExternalContactWayListResp.error:type_name -> wechat.Error
	26, // 21: wechat.ExternalContactWayListResp.contact_way:type_name -> wechat.ExternalContactWayReq
	5,  // 22: wechat.ExternalUserInfoResp.ListEntry.value:type_name -> wechat.ExternalUserInfo
	2,  // 23: wechat.ExternalContactUser.GetExternalUserInfo:input_type -> wechat.ExternalUserInfoReq
	13, // 24: wechat.ExternalContactUser.GetExternalUserIdByUserId:input_type -> wechat.ExternalUserIdReq
	15, // 25: wechat.ExternalContactUser.UpdateExternalUserRemark:input_type -> wechat.UpdateExternalUserRemarkReq
	18, // 26: wechat.ExternalContactGroupChat.GetExternalGroupChatInfo:input_type -> wechat.ExternalGroupChatInfoReq
	17, // 27: wechat.ExternalContactGroupChat.GetExternalGroupChatList:input_type -> wechat.ExternalGroupChatListReq
	19, // 28: wechat.ExternalContactWay.CreateExternalContactWay:input_type -> wechat.ExternalContactWayData
	19, // 29: wechat.ExternalContactWay.UpdateExternalContactWay:input_type -> wechat.ExternalContactWayData
	26, // 30: wechat.ExternalContactWay.DeleteExternalContactWay:input_type -> wechat.ExternalContactWayReq
	26, // 31: wechat.ExternalContactWay.GetExternalContactWayInfo:input_type -> wechat.ExternalContactWayReq
	28, // 32: wechat.ExternalContactWay.GetExternalContactWayList:input_type -> wechat.ExternalContactWayListReq
	4,  // 33: wechat.ExternalContactUser.GetExternalUserInfo:output_type -> wechat.ExternalUserInfoResp
	14, // 34: wechat.ExternalContactUser.GetExternalUserIdByUserId:output_type -> wechat.ExternalUserIdResp
	1,  // 35: wechat.ExternalContactUser.UpdateExternalUserRemark:output_type -> wechat.ErrorResp
	1,  // 36: wechat.ExternalContactGroupChat.GetExternalGroupChatInfo:output_type -> wechat.ErrorResp
	1,  // 37: wechat.ExternalContactGroupChat.GetExternalGroupChatList:output_type -> wechat.ErrorResp
	25, // 38: wechat.ExternalContactWay.CreateExternalContactWay:output_type -> wechat.SaveExternalContactWayResp
	25, // 39: wechat.ExternalContactWay.UpdateExternalContactWay:output_type -> wechat.SaveExternalContactWayResp
	1,  // 40: wechat.ExternalContactWay.DeleteExternalContactWay:output_type -> wechat.ErrorResp
	27, // 41: wechat.ExternalContactWay.GetExternalContactWayInfo:output_type -> wechat.ExternalContactWayInfoResp
	29, // 42: wechat.ExternalContactWay.GetExternalContactWayList:output_type -> wechat.ExternalContactWayListResp
	33, // [33:43] is the sub-list for method output_type
	23, // [23:33] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_wechat_proto_init() }
func file_wechat_proto_init() {
	if File_wechat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wechat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserInfoOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserProfileItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserProfileItemText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserFollowUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserFollowUserTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserFollowUserWechatChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExternalUserRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseridList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalGroupChatListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalGroupChatInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayConclusion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayConclusionText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayConclusionImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayConclusionLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayConclusionMiniprogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveExternalContactWayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalContactWayListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wechat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_wechat_proto_goTypes,
		DependencyIndexes: file_wechat_proto_depIdxs,
		MessageInfos:      file_wechat_proto_msgTypes,
	}.Build()
	File_wechat_proto = out.File
	file_wechat_proto_rawDesc = nil
	file_wechat_proto_goTypes = nil
	file_wechat_proto_depIdxs = nil
}
